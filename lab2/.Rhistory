setwd("~/bios-20172-labs/lab2")
GC_content(dengue_vec)
#############################################################################
#                  PRE-REQUISITE CODE CHUNK... RUN ME                       #
#############################################################################
#RUN THIS CHUNK then keep this code chunk in your Rmd to avoid errors when knitting.
caffeine_Data <- read.csv('caffeine_jjp.csv', header = TRUE, sep = ',')
protein_Data <- read.csv("protein_data.csv", header=T,sep=",")
dftigers <- read.csv('DeathsFromTigers.csv', header = TRUE, stringsAsFactors = FALSE)
tiger_Table <- sort(table(dftigers$activity),  decreasing=T)
x <- runif(60)
y <- runif(60)
x1 <- runif(60)
y1 <- runif(60)
plot(x, y, main = "Plot with 2 Datasets", col = "red")
points(x1, y1, col = "blue")
x <- rnorm(60)
y <- rnorm(60)
x1 <- rnorm(60)
y1 <- rnorm(60)
plot(x, y, main = "Plot with 2 Datasets", col = "red")
points(x1, y1, col = "blue")
a <- runif(25)
b <- runif(250)
c <- runif(2500)
d <- runif(2500000)
hist(a, xlab = "Uniformly distributed x and y variables", main = "X and Y Histogram", col = "red")
hist(b, xlab = "Uniformly distributed x and y variables", main = "X and Y Histogram", col = "orange")
hist(c, xlab = "Uniformly distributed x and y variables", main = "X and Y Histogram", col = "yellow")
hist(d, xlab = "Uniformly distributed x and y variables", main = "X and Y Histogram", col = "green")
a <- rnorm(25)
b <- rnorm(250)
c <- rnorm(2500)
d <- rnorm(2500000)
hist(a, xlab = "Uniformly distributed x and y variables", main = "X and Y Histogram", col = "red")
hist(b, xlab = "Uniformly distributed x and y variables", main = "X and Y Histogram", col = "orange")
hist(c, xlab = "Uniformly distributed x and y variables", main = "X and Y Histogram", col = "yellow")
hist(d, xlab = "Uniformly distributed x and y variables", main = "X and Y Histogram", col = "green")
hist(caffeine_Data$Caffeine_mg_in_16_oz_coffee, xlab = 'Caffeine (MG) per 16 oz cup', main = "Amount of Caffeine per 16 oz", col = 'violetred', breaks = 6)
protein_Data <- read.csv("protein_data.csv", header = TRUE, stringsAsFactors = FALSE)
head(protein_Data)
protein_Data$length
protein_Data$length[1:20]
ncol(protein_Data)
nrow(protein_Data) # 10798
colnames(protein_Data)
dftigers <- read.csv('DeathsFromTigers.csv', header = TRUE, stringsAsFactors = FALSE)
tiger_Table <- sort(table(dftigers$activity), decreasing=T)
barplot(tiger_Table, xlab = "activities", ylab = "frequency", main = "Deaths by Tigers", las = 2)
dfmeasles <- read.csv('MeaslesOutbreaks.csv', header = TRUE, stringsAsFactors = FALSE)
plot(dfmeasles$yearByQuarter, dfmeasles$confirmedCases, main = "Measles Outbreak", xlab = "year by quarter", ylab = "cases confirmed", col = "forestgreen")
plot(dfmeasles$yearByQuarter, dfmeasles$confirmedCases, main = "Measles Outbreak", xlab = "year by quarter", ylab = "cases confirmed", col = "dark red", type = "l")
dfcountries <- read.csv('countries2005.csv', header = TRUE, stringsAsFactors = FALSE)
boxplot(dfcountries$Population_growth, dfcountries$Fertility_rate, main = "Analysis of Population Growth and Fertility Rates", names = c("Population Growth", "Fertility Rates"), col = c("red", "orange"))
# the categorical variables are the countries and continents on the excel sheet, and every variable on the file are all numerical. The explanatory variables are population growth and fertility rates, and the response variable are the numbers of population growth and ferility rates calculated.
boxplot(dfcountries$Mortality_rate_adult_female_per_1000, dfcountries$Mortality_rate_adult_male_per_1000, main = "Analysis of Mortality Rates Between Males and Females", names = c("Mortality Rates (Adult Female) Per 1000", "Mortality Rates (Adult Male) Per 1000"), col = c("yellow", "forest green"), las = 2)
# The median for mortality rates is higher for adult men than for adult women. The overall box plots show that mortality rates for men are higher than mortality rates for women.
quad <- function(num){
return(num^4)
}
quad(34)
fiverecip <- function(vec){
y <- (1/vec)*5
plot(y)
}
fiverecip(-15:5)
my_Range <- function(vec){
return(c(min(vec), max(vec)))
}
my_Range(c(6,18,3,9,24,12))
my_Mean <- function(vec){
return(sum(vec)/length(vec))
}
vec1 <- c(6,18,3,9,24,12)
my_Mean(vec1)
mean(vec1)
mySD <-function(input)
return(sqrt(sum(
((input)-(my_Mean(input)))^2)/(length(input)-1)))
vec1 <- seq(1, 100, 0.5)
mySD(vec1)
sd(vec1)
if(mySD(vec1) == sd(vec1)){
print("Your code is correct")
} else {
print("Try again!")
}
library('seqinr')
dengue <- read.fasta(file = 'dengue_seq.txt')
dengue_vec <- as.vector(dengue[[1]])
GC_content <- function(seq){
length <- 0
c <- 0
g <- 0
for(i in dengue_vec){
length <- length + 1
if(i=="c"){
c <- c+1
}
if(i=="g"){
g <- g+1
}
}
GC_content <- ((g+c)/length)*100
return(GC_content)
}
GC_content(dengue_vec)
corona <- read.csv('coronadata.csv', header = TRUE, stringsAsFactors = FALSE)
plot(corona$Day, corona$Italy, main = "Number of New Coronavirus Cases in Italy Per day", xlab = "days passed", ylab = "cases confirmed", col = "red", type = "l")
plot(corona$Day, corona$China, main = "Number of New Coronavirus Cases in China Per day", xlab = "days passed", ylab = "cases confirmed", col = "red", type = "l")
# The cases in China spiked sooner and reached extremely high levels towards 40-50 days. As for Italy, their cases did not peak until after 60 days. The graph for Italy appears left skewed and the graph for China does not seem to have a skew.
